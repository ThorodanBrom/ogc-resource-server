version: '3.7'

networks:
  ogc-net:
    driver: bridge

services:
  test:
    image: ghcr.io/datakaveri/geoserver-test:latest
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - ./src/:/usr/share/app/src
      - /home/ubuntu/configs/ogc-config-dev.json:/usr/share/app/configs/config.json
      - /home/ubuntu/configs/ogc-config-test.json:/usr/share/app/configs/test.json
      - ./docker/runTests.sh:/usr/share/app/docker/runTests.sh
      - ${WORKSPACE}:/tmp/test
      - type: volume
        source: ogc-volume
        target: /usr/share/app/storage/temp-dir
    depends_on:
      - "s3mockModded"
    ports:
      - "8443:8080"
    restart: on-failure
    networks:
      - ogc-net
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    command: bash -c "exec java -jar -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -javaagent:/tmp/jacoco/lib/jacocoagent.jar=output=tcpserver,address=0.0.0.0,port=57070,dumponexit=false -Ddisable.auth=true -Ds3.mock=true ./fatjar.jar  --host $$(hostname) -c configs/test.json"

  integ-test:
    image: ghcr.io/datakaveri/geoserver-test:latest
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - ./src/:/usr/share/app/src
      - /home/ubuntu/configs/ogc-config-dev.json:/usr/share/app/configs/config.json
      - /home/ubuntu/configs/ogc-config-test.json:/usr/share/app/configs/test.json
      - ./docker/runTests.sh:/usr/share/app/docker/runTests.sh
      - ${WORKSPACE}:/tmp/test
      - type: volume
        source: ogc-volume
        target: /usr/share/app/storage/temp-dir
    depends_on:
      - "s3mockModded"
      - "createIntegBucket"
    ports:
      - "8443:8080"
    restart: on-failure
    networks:
      - ogc-net
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    command: bash -c "exec java -jar -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -javaagent:/tmp/jacoco/lib/jacocoagent.jar=output=tcpserver,address=0.0.0.0,port=57070,dumponexit=false -Dfake-token=true -Ds3.mock=true ./fatjar.jar  --host $$(hostname) -c configs/test.json"

  perfTest:
    image: ghcr.io/datakaveri/geoserver-test:latest
    environment:
      - LOG_LEVEL=INFO
    volumes:
      - /home/ubuntu/configs/ogc-config-dev.json:/usr/share/app/configs/config.json
      - type: volume
        source: ogc-volume
        target: /usr/share/app/storage/temp-dir
    depends_on:
      - "s3mockModded"
    ports:
      - "8443:8080"
    restart: on-failure
    networks:
      - ogc-net
    logging:
      driver: "json-file"
      options:
        max-file: "5"
        max-size: "100m"
    command: bash -c "exec java -Dvertx.logger-delegate-factory-class-name=io.vertx.core.logging.Log4j2LogDelegateFactory -jar -Ds3.mock=true ./fatjar.jar  --host $$(hostname) -c configs/config.json"

  s3mockModded:
    image: minio/minio:RELEASE.2024-07-31T05-46-26Z
    environment:
      - MINIO_ROOT_USER=user
      - MINIO_ROOT_PASSWORD=password
      - MINIO_VOLUMES="/data"    
    networks:
      ogc-net:
        aliases:
          - s3.aws-region.amazonaws.com
    volumes:
      - /tmp/data:/data
      - ./src/test/resources/minioCerts:/opt/certs  
    ports:
      - 9090:443
      - 9001:9001  
    command: server --address :443 --console-address :9001 --certs-dir /opt/certs /data

  createIntegBucket:
    image: minio/minio:RELEASE.2024-07-31T05-46-26Z
    networks:
      - ogc-net
    volumes:
      - /tmp/data:/data        
    depends_on:
      - "s3mockModded"
    entrypoint: >
      /bin/sh -c "
      set -euxo;
      sleep 5;
      /usr/bin/mc config host add myminio https://s3MockModded user password --insecure;
      /usr/bin/mc mb myminio/bucket1 --insecure;
      /usr/bin/mc anonymous set public myminio/bucket1 --insecure;
      exit 0;
      "    
        
volumes:
  ogc-volume:
